{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Regional Land Cover Monitoring System","text":""},{"location":"#installation","title":"Installation","text":"<p>Install with pip: </p> <pre><code>pip install rlcms\n</code></pre> <p>Test that <code>earthengine-api</code> is setup and authenticated by checking the folder contents within one of your cloud projects.  * In your shell, run:</p> <pre><code>earthengine set_project &lt;project-name&gt;\nearthengine ls projects/project-name/assets\n</code></pre> <p>If you do not get an error and it returns a list of folders and assets similar to this then you are good to go! :tada:</p>"},{"location":"#features","title":"Features","text":"<ul> <li>stratified sampling for use in Collect Earth Online</li> <li>Training and validation data extraction, from points or polygon references</li> <li>Land cover modeling using Primitive ensembles, complete with model metrics for iterative improvements</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code>from rlcms.composites import Composite\n# Create an annual Sentinel-1 Composite\nc = Composite(dataset='Sentinel1',\n        region=aoi,\n        start_date='2020-01-01',\n        end_date='2021-12-31',\n        composite_mode='annual',\n        reducer='median')\n\n# look at the Composite object\nprint(c.__dict__)\n\n# retrieve band names\nprint(f\"Composite bands:{c.bands}\")\n\n# retrieve ee.Image from Composite object \nimage = c.image\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions from the community. If there are issues are improvements, please submit an issue on Github: https://github.com/sig-gis/rlcms</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the GPL-3 License - see the LICENSE file for details.</p>"},{"location":"about/","title":"About RLCMS","text":"<p>Monitoring land cover and land use change by providing accurate and timely land cover maps and information, plays a critical role in multiple sectors in the developing world including agricultural planning and food security, carbon accounting, water management and natural resource management. However, many developing countries, including those within the Lower Mekong region, lack the coordinated capacity to produce timely, and temporally comparable geospatial data products sufficient to meet their management needs.</p> <p>The Regional Land Cover Monitoring System (RLCMS) was developed by SERVIR-Mekong with the support of the U.S. Forest Service, NASA Applied Science Program, Google, the University of Maryland and governments of countries in the Mekong region. The system utilizes satellite technology to facilitate the production of customized, high-quality regional land cover maps at a 30-m resolution for each year from 2000 to present, in addition to complimentary land cover information. Using publicly available global satellite data, such as Landsat and MODIS, makes the system easily transferable. The adaptable system framework allows for a customized service that is able to map different land cover typologies based on ongoing user needs and bespoke landscape monitoring objectives.</p> <p></p>"},{"location":"about/#a-python-package-for-co-development","title":"A python package for co-development","text":"<p>The <code>rlcms</code> python package is meant to jump-start local mapping projects and provide a living co-development tool for regional and global collaborators to build methodologies and share reproducible results. </p>"},{"location":"cli/","title":"CLI Tool Documentation","text":"<p>Each Command Line Interface (CLI) script tool can be run in your command-line terminal of choice. The user must provide values for each required command-line argument to control the analysis. You can first run any script, only declaring the <code>-h</code> flag. This will bring up the help dialog with a usage example and a description of required command-line arguments. </p>"},{"location":"cli/#sample_pts","title":"sample_pts","text":"<p>Generate Random Sample Points From an ee.Image, Formatted for Collect Earth Online</p> <p>The points are pre-formatted for use in Collect Earth Online. You can choose to export the points to Google Drive, to GEE Asset or both. </p> <p>example:</p> <pre><code>sample_pts -im input/path/to/image -band LANDCOVER -o output/path --n_points 100 --to_drive\n</code></pre>"},{"location":"cli/#composite","title":"composite","text":"<p>Create a Composite from one or multiple datasets. </p> <p>The resulting band stack is needed for both extracting training data (using <code>train_test</code>) and as input stack for the primitive model training &amp; inference (using <code>primitives</code> tool). </p> <p>There are many compositing options available, which you control in the CLI with your own settings .txt file. Follow this template <code>composite_template_settings.txt</code> to create your own file, then pass this file's path to <code>--settings</code>. </p> <p>If your AOI is a set of reference polygons and not one contiguous AOI polygon, set <code>multi_poly</code> to <code>true</code> in your <code>--settings</code> file - this will export band information only within each polygon's footprint. </p> <p>example:</p> <pre><code>composite -a aoi/fc/path -d Landsat8 -s 2020-01-01 -e 2020-12-31 -o output/path --settings path/to/settings/file.txt\n</code></pre>"},{"location":"cli/#train_test","title":"train_test","text":"<p>Extract Train and Test Point Data from an Input Image using a Reference Locations (can be Point or Polygon).</p> <p>Generates stratified random samples from reference locations, splitting the sample points into train and test points if desired. The image bands from the provided image are extracted to every point. </p> <p>example:</p> <pre><code>train_test -ref path/to/reference_fc -im path/to/input/stack -band LANDCOVER --scale 10\n                -o unique/output/path --class_values 1 2 3 4 5 6 7 8 --class_points 10 10 10 10 10 10 10\n</code></pre>"},{"location":"cli/#primitives","title":"primitives","text":"<p>Create Primitives For All Classes in Provided Training Data. </p> <p>This script trains probability models for each land cover class in your typology as provided by the numeric <code>--class_name</code> property in the provided reference data. It then exports these binary probability images one land cover at a time into a land cover 'Primitives' image collection. Model metrics are retained in the Images themselves as properties, which the user can choose to export to local files by setting a <code>--metrics_folder</code> local folder path during the run. </p> <p>example:</p> <pre><code>primitives -i path/to/input_stack -t path/to/training_data --class_name LANDCOVER -o path/to/output --metrics_folder local/folder/path\n</code></pre>"},{"location":"cli/#landcover","title":"landcover","text":"<p>Generate Single Land Cover Image From Land Cover Primitives Image Collection</p> <p>This script takes a Primitives Image Collection and assembles a single-band land cover image from them using per-pixel max probability.</p> <p>example:</p> <pre><code>landcover -i input/primitives/imagecollection/path -o output/path\n</code></pre>"},{"location":"composites/","title":"composites module","text":"<p>Coming Soon</p>"},{"location":"covariates/","title":"covariates module","text":"<p>Coming Soon</p>"},{"location":"harmonics/","title":"harmonics module","text":"<p>Coming Soon</p>"},{"location":"primitives/","title":"primitives module","text":"<p>Coming Soon</p>"},{"location":"sampling/","title":"sampling module","text":"<p>Coming Soon</p>"},{"location":"utils/","title":"utils module","text":"<p>Coming Soon</p>"},{"location":"colab/compositing/","title":"Compositing Example","text":""},{"location":"colab/compositing/#open-in-colab","title":"Open in Colab","text":""},{"location":"colab/primitives/","title":"Primitives Example","text":""},{"location":"colab/primitives/#open-in-colab","title":"Open in Colab","text":""},{"location":"colab/sampling/","title":"Sampling Example","text":""},{"location":"colab/sampling/#open-in-colab","title":"Open in Colab","text":""}]}